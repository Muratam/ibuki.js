/*
Ibuki.ts は設計が悪い気がする
東方弾幕画報をゲーム化したい
必要なもの : (対戦するなら)ネットワーク機能
Proxy を使ってリアルタイムで反映されるようにしたい
Component は付け足しが基本な設計
- 画面はスクロールされない => 基本サイズを設定できる(+ fit-width/fit-height)
- 例えば,会話画面が欲しいとき,必要な情報は
  - カラー(アクセント/サブ/etc...),ライフサイクル
  - 文字 / 表示方法
  - 表示領域
let talkTmpl = new TalkScene(StringOption?,ColorOption,OperationOption?);
talkTmpl.print("いい感じに表示");
tweenがほしい?
*/
// js の 多種多様なライブラリを統一して集めていい感じにしたい
// 動的なゲームはあまり対象とは考えていない.(?)
// DOM で全てなんとかしたい？
// アクションゲームを作るのは難しいような構造に挑戦したい.
// - table / markdown / SVG ...
// particle / effect / 3D は無理なのは仕方がない(?)
// sum とか shlottle とか Katex とか グラフとか色々生やしたい
// 色々なDOM(jq..とか)も用意に使えるようにしたい？
// display:none するよりは 毎度毎度Elementは生成/破棄したほうがよい。
// CSSは,小回りが効くように各ノードごとにやっておいてパフォーマンスが困ってきたら変更。

export interface CSSKey {

  // "background-color"?: Color | number | string
  // alignContent: string | null;
  // alignItems: string | null;
  // alignSelf: string | null;
  // alignmentBaseline: string | null;
  // animation: string;
  // animationDelay: string;
  // animationDirection: string;
  // animationDuration: string;
  // animationFillMode: string;
  // animationIterationCount: string;
  // animationName: string;
  // animationPlayState: string;
  // animationTimingFunction: string;
  // backfaceVisibility: string | null;
  // background: string | null;
  // backgroundAttachment: string | null;
  // backgroundClip: string | null;
  // backgroundColor: string | null;
  // backgroundImage: string | null;
  // backgroundOrigin: string | null;
  // backgroundPosition: string | null;
  // backgroundPositionX: string | null;
  // backgroundPositionY: string | null;
  // backgroundRepeat: string | null;
  // backgroundSize: string | null;
  // baselineShift: string | null;
  // border: string | null;
  // borderBottom: string | null;
  // borderBottomColor: string | null;
  // borderBottomLeftRadius: string | null;
  // borderBottomRightRadius: string | null;
  // borderBottomStyle: string | null;
  // borderBottomWidth: string | null;
  // borderCollapse: string | null;
  // borderColor: string | null;
  // borderImage: string | null;
  // borderImageOutset: string | null;
  // borderImageRepeat: string | null;
  // borderImageSlice: string | null;
  // borderImageSource: string | null;
  // borderImageWidth: string | null;
  // borderLeft: string | null;
  // borderLeftColor: string | null;
  // borderLeftStyle: string | null;
  // borderLeftWidth: string | null;
  // borderRadius: string | null;
  // borderRight: string | null;
  // borderRightColor: string | null;
  // borderRightStyle: string | null;
  // borderRightWidth: string | null;
  // borderSpacing: string | null;
  // borderStyle: string | null;
  // borderTop: string | null;
  // borderTopColor: string | null;
  // borderTopLeftRadius: string | null;
  // borderTopRightRadius: string | null;
  // borderTopStyle: string | null;
  // borderTopWidth: string | null;
  // borderWidth: string | null;
  // bottom: string | null;
  // boxShadow: string | null;
  // boxSizing: string | null;
  // breakAfter: string | null;
  // breakBefore: string | null;
  // breakInside: string | null;
  // captionSide: string | null;
  // clear: string | null;
  // clip: string | null;
  // clipPath: string | null;
  // clipRule: string | null;
  // color: string | null;
  // colorInterpolationFilters: string | null;
  // columnCount: any;
  // columnFill: string | null;
  // columnGap: any;
  // columnRule: string | null;
  // columnRuleColor: any;
  // columnRuleStyle: string | null;
  // columnRuleWidth: any;
  // columnSpan: string | null;
  // columnWidth: any;
  // columns: string | null;
  // content: string | null;
  // counterIncrement: string | null;
  // counterReset: string | null;
  // cssFloat: string | null;
  // cssText: string;
  // cursor: string | null;
  // direction: string | null;
  // display: string | null;
  // dominantBaseline: string | null;
  // emptyCells: string | null;
  // enableBackground: string | null;
  // fill: string | null;
  // fillOpacity: string | null;
  // fillRule: string | null;
  // filter: string | null;
  // flex: string | null;
  // flexBasis: string | null;
  // flexDirection: string | null;
  // flexFlow: string | null;
  // flexGrow: string | null;
  // flexShrink: string | null;
  // flexWrap: string | null;
  // floodColor: string | null;
  // floodOpacity: string | null;
  // font: string | null;
  // fontFamily: string | null;
  // fontFeatureSettings: string | null;
  // fontSize: string | null;
  // fontSizeAdjust: string | null;
  // fontStretch: string | null;
  // fontStyle: string | null;
  // fontVariant: string | null;
  // fontWeight: string | null;
  // gap: string | null;
  // glyphOrientationHorizontal: string | null;
  // glyphOrientationVertical: string | null;
  // grid: string | null;
  // gridArea: string | null;
  // gridAutoColumns: string | null;
  // gridAutoFlow: string | null;
  // gridAutoRows: string | null;
  // gridColumn: string | null;
  // gridColumnEnd: string | null;
  // gridColumnGap: string | null;
  // gridColumnStart: string | null;
  // gridGap: string | null;
  // gridRow: string | null;
  // gridRowEnd: string | null;
  // gridRowGap: string | null;
  // gridRowStart: string | null;
  // gridTemplate: string | null;
  // gridTemplateAreas: string | null;
  // gridTemplateColumns: string | null;
  // gridTemplateRows: string | null;
  // height: string | null;
  // imeMode: string | null;
  // justifyContent: string | null;
  // justifyItems: string | null;
  // justifySelf: string | null;
  // kerning: string | null;
  // layoutGrid: string | null;
  // layoutGridChar: string | null;
  // layoutGridLine: string | null;
  // layoutGridMode: string | null;
  // layoutGridType: string | null;
  // left: string | null;
  // readonly length: number;
  // letterSpacing: string | null;
  // lightingColor: string | null;
  // lineBreak: string | null;
  // lineHeight: string | null;
  // listStyle: string | null;
  // listStyleImage: string | null;
  // listStylePosition: string | null;
  // listStyleType: string | null;
  // margin: string | null;
  // marginBottom: string | null;
  // marginLeft: string | null;
  // marginRight: string | null;
  // marginTop: string | null;
  // marker: string | null;
  // markerEnd: string | null;
  // markerMid: string | null;
  // markerStart: string | null;
  // mask: string | null;
  // maskImage: string | null;
  // maxHeight: string | null;
  // maxWidth: string | null;
  // minHeight: string | null;
  // minWidth: string | null;
  // msContentZoomChaining: string | null;
  // msContentZoomLimit: string | null;
  // msContentZoomLimitMax: any;
  // msContentZoomLimitMin: any;
  // msContentZoomSnap: string | null;
  // msContentZoomSnapPoints: string | null;
  // msContentZoomSnapType: string | null;
  // msContentZooming: string | null;
  // msFlowFrom: string | null;
  // msFlowInto: string | null;
  // msFontFeatureSettings: string | null;
  // msGridColumn: any;
  // msGridColumnAlign: string | null;
  // msGridColumnSpan: any;
  // msGridColumns: string | null;
  // msGridRow: any;
  // msGridRowAlign: string | null;
  // msGridRowSpan: any;
  // msGridRows: string | null;
  // msHighContrastAdjust: string | null;
  // msHyphenateLimitChars: string | null;
  // msHyphenateLimitLines: any;
  // msHyphenateLimitZone: any;
  // msHyphens: string | null;
  // msImeAlign: string | null;
  // msOverflowStyle: string | null;
  // msScrollChaining: string | null;
  // msScrollLimit: string | null;
  // msScrollLimitXMax: any;
  // msScrollLimitXMin: any;
  // msScrollLimitYMax: any;
  // msScrollLimitYMin: any;
  // msScrollRails: string | null;
  // msScrollSnapPointsX: string | null;
  // msScrollSnapPointsY: string | null;
  // msScrollSnapType: string | null;
  // msScrollSnapX: string | null;
  // msScrollSnapY: string | null;
  // msScrollTranslation: string | null;
  // msTextCombineHorizontal: string | null;
  // msTextSizeAdjust: any;
  // msTouchAction: string | null;
  // msTouchSelect: string | null;
  // msUserSelect: string | null;
  // msWrapFlow: string;
  // msWrapMargin: any;
  // msWrapThrough: string;
  // objectFit: string | null;
  // objectPosition: string | null;
  // opacity: string | null;
  // order: string | null;
  // orphans: string | null;
  // outline: string | null;
  // outlineColor: string | null;
  // outlineOffset: string | null;
  // outlineStyle: string | null;
  // outlineWidth: string | null;
  // overflow: string | null;
  // overflowX: string | null;
  // overflowY: string | null;
  // padding: string | null;
  // paddingBottom: string | null;
  // paddingLeft: string | null;
  // paddingRight: string | null;
  // paddingTop: string | null;
  // pageBreakAfter: string | null;
  // pageBreakBefore: string | null;
  // pageBreakInside: string | null;
  // readonly parentRule: CSSRule;
  // penAction: string | null;
  // perspective: string | null;
  // perspectiveOrigin: string | null;
  // pointerEvents: string | null;
  // position: string | null;
  // quotes: string | null;
  // resize: string | null;
  // right: string | null;
  // rotate: string | null;
  // rowGap: string | null;
  // rubyAlign: string | null;
  // rubyOverhang: string | null;
  // rubyPosition: string | null;
  // scale: string | null;
  // scrollBehavior: string;
  // stopColor: string | null;
  // stopOpacity: string | null;
  // stroke: string | null;
  // strokeDasharray: string | null;
  // strokeDashoffset: string | null;
  // strokeLinecap: string | null;
  // strokeLinejoin: string | null;
  // strokeMiterlimit: string | null;
  // strokeOpacity: string | null;
  // strokeWidth: string | null;
  // tableLayout: string | null;
  // textAlign: string | null;
  // textAlignLast: string | null;
  // textAnchor: string | null;
  // textCombineUpright: string | null;
  // textDecoration: string | null;
  // textIndent: string | null;
  // textJustify: string | null;
  // textKashida: string | null;
  // textKashidaSpace: string | null;
  // textOverflow: string | null;
  // textShadow: string | null;
  // textTransform: string | null;
  // textUnderlinePosition: string | null;
  // top: string | null;
  // touchAction: string;
  // transform: string | null;
  // transformOrigin: string | null;
  // transformStyle: string | null;
  // transition: string;
  // transitionDelay: string;
  // transitionDuration: string;
  // transitionProperty: string;
  // transitionTimingFunction: string;
  // translate: string | null;
  // unicodeBidi: string | null;
  // userSelect: string | null;
  // verticalAlign: string | null;
  // visibility: string | null;
  // webkitBorderImage: string | null;
  // webkitBoxOrdinalGroup: string;
  // webkitColumnBreakAfter: string | null;
  // webkitColumnBreakBefore: string | null;
  // webkitColumnBreakInside: string | null;
  // webkitColumnCount: any;
  // webkitColumnGap: any;
  // webkitColumnRule: string | null;
  // webkitColumnRuleColor: any;
  // webkitColumnRuleStyle: string | null;
  // webkitColumnRuleWidth: any;
  // webkitColumnSpan: string | null;
  // webkitColumnWidth: any;
  // webkitColumns: string | null;
  // webkitTapHighlightColor: string | null;
  // webkitUserModify: string | null;
  // webkitUserSelect: string | null;
  // webkitWritingMode: string | null;
  // whiteSpace: string | null;
  // widows: string | null;
  // width: string | null;
  // wordBreak: string | null;
  // wordSpacing: string | null;
  // wordWrap: string | null;
  // writingMode: string | null;
  // zIndex: string | null;
  // zoom: string | null;
}
